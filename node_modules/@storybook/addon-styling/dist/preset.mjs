var n=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,o)=>(typeof require<"u"?require:t)[o]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var u=e=>typeof e!="string"&&e.test instanceof RegExp&&e.test.test("test.css"),a=e=>({loader:n.resolve("style-loader")}),p=({cssModules:e,postCss:t})=>{let o=t?{importLoaders:1}:{},s=e?{modules:{auto:!0}}:{};return {loader:n.resolve("css-loader"),options:{...o,...s}}},c=({postCss:e})=>{let t=typeof e=="object"?{...e}:{};return {loader:n.resolve("postcss-loader"),options:{...t}}},S=/\.css$/,m=e=>{if(e.cssBuildRule)return e.cssBuildRule;let t=[a(),p(e),...e.postCss?[c(e)]:[]];return {test:S,use:t}},l=(e,t)=>{if(!t.postCss&&!t.cssModules&&!t.cssBuildRule)return;let o=e.module?.rules,s=m(t),r=o?.findIndex(u);r===-1?o?.push(s):o[r]=s;};var y=e=>typeof e!="string"&&e.test instanceof RegExp&&(e.test.test("test.scss")||e.test.test("test.sass")),f=e=>({loader:n.resolve("style-loader")}),R=({cssModules:e,postCss:t})=>{let o={importLoaders:t?3:2},s=e?{modules:{auto:!0}}:{};return {loader:n.resolve("css-loader"),options:{...o,...s}}},g=({postCss:e})=>{let t=typeof e=="object"?{...e}:{};return {loader:n.resolve("postcss-loader"),options:{...t}}},b=e=>({loader:n.resolve("resolve-url-loader")}),O=({sass:e})=>{let t=typeof e=="object"?{sassOptions:e}:{},o=typeof e=="object"&&e.hasOwnProperty("implementation")?{implementation:e.implementation}:{},s=typeof e=="object"&&(e.hasOwnProperty("prependData")||e.hasOwnProperty("additionalData"))?{additionalData:e.prependData||e.additionalData}:{};return {loader:n.resolve("sass-loader"),options:{sourceMap:!0,...t,...o,...s}}},C=/\.s[ac]ss$/,A=e=>{if(e.scssBuildRule)return e.scssBuildRule;let t=[f(),R(e),...e.postCss?[g(e)]:[],b(),O(e)];return {test:C,use:t}},i=(e,t)=>{if(!t.cssModules&&!t.postCss&&!t.sass&&!t.scssBuildRule)return;let o=e.module?.rules,s=A(t),r=o?.findIndex(y);r===-1?o?.push(s):o[r]=s;};function d(e,t={}){return l(e,t),i(e,t),e}var B=d;

export { B as webpackFinal };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=preset.mjs.map